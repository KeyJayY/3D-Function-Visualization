#ifndef __GUIMyFrame1__
#define __GUIMyFrame1__

/**
@file
Subclass of MyFrame1, which is generated by wxFormBuilder.
*/

#include "GUI.h"

#include <wx/filedlg.h>
#include <wx/dcmemory.h>
#include <wx/dcclient.h>
#include <wx/dcbuffer.h>

#define SIZE 100

//// end generated include

class Point {
public:
	float x, y, z;
	Point(float xx, float yy, float zz) : x(xx), y(yy), z(zz) {}

};

/** Implementing MyFrame1 */
class GUIMyFrame1 : public MyFrame1
{
	protected:
		// Handlers for MyFrame1 events.
		void m_button1_click( wxCommandEvent& event );
		void m_button2_click( wxCommandEvent& event );
		void m_button3_click( wxCommandEvent& event );
		void m_button4_click( wxCommandEvent& event );
		void m_cb_color_click( wxCommandEvent& event );
		void m_s_rotation_onscroll( wxScrollEvent& event );
		void m_s_tilt_onscroll( wxScrollEvent& event );
		void WxPanel_Repaint(wxUpdateUIEvent& event);
	public:
		/** Constructor */
		GUIMyFrame1( wxWindow* parent );
	//// end generated class members
	private:
		bool color = false;
		float values[100][100];
		float tilt = 50;
		float vmin = FLT_MAX, vmax = -FLT_MAX;
		int fun = 0;

		std::vector<Point> points;
		std::vector<Point> rotatedPoints;

		void PrepareData(int fun);
		float shepard(int i, int j);
		void Repaint();
		void rotatePoints(float alpha);
		float weight(float x, float y, int i);
		void calculateValues();

};

#endif // __GUIMyFrame1__
